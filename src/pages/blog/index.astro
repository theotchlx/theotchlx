---
import BaseLayout from '../../layouts/BaseLayout.astro';
import DocumentItem from '../../components/DocumentItem.astro';

const pageTitle = "My blog";

const articles = await Astro.glob('./articles/*.md');
articles.sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));

const qualities = articles.map((article) => article.frontmatter.insight).filter((value, index, self) => self.indexOf(value) === index);
---

<BaseLayout pageTitle={"theotchlx | " + pageTitle}>
  <h1>{ pageTitle.toUpperCase() }</h1>
  <section class="box">
    <h2>Every article is free to read, copy, and share.</h2>
    <p>
      This is where I publish my articles for free. I try to make them as clear, concise and qualitative as possible.<br />
      They are sorted by depth of insight into their subject, but you can also sort them by tags.
    </p>
    <p>Sort articles by tags: <a href="/blog/tags/">See all tags</a></p>
    <p>Feel free to send me any feedback (or anything, really!) by <a href="mailto:theo.tchlx@proton.me">email</a>.</p>
  </section>

  <hr class="title-bar" />

  <center><h2>More articles coming soon!</h2></center>
  <center><h3>On open source philosophy, open access and scientific research,<br />management, tech, low-level computer science...</h3></center>

  <ul>
    {qualities.sort().map((insight) => (
      // <>...</> is to return only one thing. Because a map returns only one element.
      <>
      <h3>
        {insight === 1
          ? "Rich insight depth"
          : insight === 2
          ? "Moderate insight depth"
          : insight === 3
          ? "Shallow insight depth"
          : "Other articles"}
      </h3>
      {articles
        .filter((project) => project.frontmatter.insight === insight)
        .map((article) => (
          <DocumentItem date={article.frontmatter.pubDate} url={article.url} title={article.frontmatter.title} description={article.frontmatter.abstract} />
        ))}
      </>
    ))}
  </ul>
  <hr />
  <ul>
    <h3>All articles by date (newest first)</h3>
    {articles
      .map((article) => (
        <DocumentItem date={article.frontmatter.pubDate} url={article.url} title={article.frontmatter.title} description={article.frontmatter.abstract} />
      ))}
  </ul>
</BaseLayout>
