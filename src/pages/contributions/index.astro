---
import BaseLayout from '../../layouts/BaseLayout.astro';
import DocumentItem from '../../components/DocumentItem.astro';

const pageTitle = "My contributions";

const contributions = await Astro.glob('./*.md');
contributions.sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));

const qualities = contributions.map((contribution) => contribution.frontmatter.size).filter((value, index, self) => self.indexOf(value) === index);
---

<BaseLayout pageTitle={"theotchlx | " + pageTitle}>
  <h1>{ pageTitle.toUpperCase() }</h1>
  <section class="box">
    <h2>My contributions to the world of open source software.</h2>
    <p>
      This is a list of my most important contributions to open source communities.<br />
      They are sorted by importance, but you can also sort them by tags.
    </p>
    <p>Sort contributions by tags: <a href="/contributions/tags/">See all tags</a></p>
  </section>

  <hr class="title-bar" />

  <ul>
    {qualities.sort().map((size) => (
      // <>...</> is to return only one thing. Because a map returns only one element.
      <>
      <h3>
        {size === 1
          ? "Minor contributions"
          : size === 2
          ? "Moderate contributions"
          : size === 3
          ? "Major contributions"
          : "Other contributions"}
      </h3>
      {contributions
        .filter((project) => project.frontmatter.size === size)
        .map((contribution) => (
          <DocumentItem date={contribution.frontmatter.pubDate} url={contribution.url} title={contribution.frontmatter.title} description={contribution.frontmatter.abstract} />
        ))}
      </>
    ))}
  </ul>
  <hr />
  <ul>
    <h3>All contributions by date (latest first)</h3>
    {contributions
      .map((contribution) => (
        <DocumentItem date={contribution.frontmatter.pubDate} url={contribution.url} title={contribution.frontmatter.title} description={contribution.frontmatter.abstract} />
      ))}
  </ul>
</BaseLayout>
